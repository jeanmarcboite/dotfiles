# Use powerline
USE_POWERLINE="true"
# Has weird character width
# Example:
#    is not a diamond
HAS_WIDECHARS="false"
alias zshrc='source "${ZDOTDIR:-$HOME}/.zshrc"'
export EDITOR=nvim
# Customize to your needs...
setopt nobeep
setopt auto_cd
setopt append_history
export HISTSIZE=20000000
export HISTFILE=~/.zsh_history
export SAVEHIST=20000000
setopt inc_append_history
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt share_history
setopt extendedglob dotglob
# list files
export EXA_COLORS="da=1;36"
alias ls=exa
alias ll='exa -l'
alias llt='exa --tree --level=2'
alias la='exa -lbhHigUmuSa --time-style=long-iso --git --color-scale'
alias la='exa -lbhHg --time-style=long-iso --git --color-scale'

alias to='exa -al --time-style=iso | grep $(date +%D)'

alias backbox-pcloud='restic --repo rclone:pcloud:Backups/redkeep -p /home/box/.secret/restic-simple backup --exclude-file /home/box/backup/exclude /home/box'
alias backbox='restic --repo /wtf/restic -p /home/box/.secret/restic-simple backup --exclude-file /home/box/backup/exclude /home/box ; rclone copy /wtf/restic pcloud:backup'
alias update-calibre='sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin'
alias kobo-book-downloader='python ~/src/python/kobo-book-downloader/kobo-book-downloader pick ~/data/kobo.forma'
alias calibre-export='~/src/python/calibre/cdb/export.sh'
alias du='du -h'
alias df='df -h'
alias d1='du -h --max-depth=1'
alias pacman='sudo pacman'
export GITHUB_USERNAME="jmboite"
alias dgit='git --git-dir ~/.dotfiles/.git --work-tree=$HOME'
alias dpush='dgit push -u origin master'
ZIM_CONFIG_FILE=~/.config/zsh/zimrc
ZIM_HOME=${ZDOTDIR:-${HOME}}/.zim

# Download zimfw plugin manager if missing.
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  mkdir -p ${ZIM_HOME} && wget -nv -O ${ZIM_HOME}/zimfw.zsh \
      https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
fi

# Install missing modules and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZIM_CONFIG_FILE:-${ZDOTDIR:-${HOME}}/.zimrc} ]]; then
  source ${ZIM_HOME}/zimfw.zsh init
fi

source ${ZIM_HOME}/init.zsh

# Docker
alias docker-up='docker-compose up -d'
alias docker-ps='docker ps'
alias docker-start='sudo systemctl start docker'
alias docker-stop='docker stop $(docker ps -a -q)'

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/box/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/box/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/box/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/box/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

